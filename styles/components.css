.os--sro {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}

:where(.os--checkbox),
.app.os.os :where(.os--checkbox) {
	-webkit-appearance: none;
	flex: none;
	appearance: none;
	background-color: transparent;
	margin: 0;
	font: inherit;
	color: currentColor;
	height: 0.8em;
	width: 0.8em;
	border: 0.1em solid currentColor;
	border-radius: 0.1em;
	transform: translateY(0.025em);
	display: grid;
	place-content: center;
	rotate: 45deg;

	&::after {
		content: "";
		width: 0.36em;
		height: 0.36em;
		scale: 0;
		transition: scale 120ms ease-in-out;
		box-shadow: inset 1em 1em currentColor;
	}

	&.checked::after,
	&:checked::after {
		scale: 1;
	}

	&:is([type="checkbox"]) {
		cursor: pointer;
	}

	&:disabled {
		cursor: auto;
	}
}

:where(.os--checkbox-with-bg),
.app.os.os :where(.os--checkbox-with-bg) {
	background: url('../assets/media/checkbox.svg') no-repeat;
	height: 1.1em;
	width: 1.1em;
	background-size: contain;
	background-position: center;
	border: none;
	rotate: 0deg;
	position: relative;

	&.checked,
	&:checked {
		background-image: url('../assets/media/checkbox-c.svg');
	}

	&::after {
		display: none;
	}

	&:disabled {
		cursor: auto;
	}
}

:where(.os--burn),
.app.os.os :where(.os--burn) {
	-webkit-appearance: none;
	flex: none;
	appearance: none;
	background-color: inherit;
	margin: 0;
	font: inherit;
	color: currentColor;
	height: 1.5em;
	width: 1.2em;
	background: url('../assets/media/burn.svg') no-repeat;
	rotate: -90deg;
	background-size: contain;
	background-position: center;

	&.transparent {
		background-image: url('../assets/media/burn-t.svg');
		filter: none;
	}

	&:checked,
	&.checked {
		background-image: url('../assets/media/burn-c.svg');
	}

	&:is([type="checkbox"]) {
		cursor: pointer;
	}

	&:disabled {
		cursor: auto;
	}
}

:where(.os--activate) {
	flex: none;
	appearance: none;
	margin: 0px;
	padding: 0px;
	border: 1px solid currentColor;
	font: inherit;
	color: currentColor;
	background: white;
	rotate: 45deg;
	border-radius: 0.3em;
	display: grid;
	place-content: center;

	&::before {
		content: "â€“";
		display: block;
		rotate: -45deg;
		-webkit-text-stroke-width: 0.1em;
	}

	&:checked,
	&.checked {
		background-color: currentColor;

		&::before {
			color: white;
		}
	}

	&:disabled {
		cursor: auto;
	}
}

.os--accent-bg {
	background: url("/systems/os/assets/media/bg-alt.webp") repeat;
	background-color: var(--os-color-accent-bg);
	background-blend-mode: color-burn;
	color: var(--os-color-accent);
}

:where(.os--tag),
:where(.os--status),
:where(.os--limit),
:where(.os--powerTag),
:where(.os--weaknessTag),
:where(.os--themeTag),
:where(.os--backpack) {
	padding: 0px 0.4em;
	border-radius: 0em;
	white-space: nowrap;
	-webkit-box-decoration-break: clone;
	box-decoration-break: clone;
	color: var(--os-color-primary);
	font-style: italic;
	font-weight: 400;
	box-shadow: 1px 1px 1px var(--os-color-weakness-bg);

	&.os--tag {
		background: transparent;
		border: 1px solid var(--os-color-tag-bg);
		border-left: 10px solid var(--os-color-tag-bg);
		box-shadow: inset 0px 0px 5px 0px var(--os-color-tag-bg);
		color: var(--os-color-bg);
		transform: skew(-10deg);
	}

	&.os--status {
		background: transparent;
		border: 1px solid var(--os-color-status-bg);
		border-left: 10px solid var(--os-color-status-bg);
		box-shadow: inset 0px 0px 5px 0px var(--os-color-status-bg);
		color: var(--os-color-bg);
		transform: skew(-10deg);
	}

	&.os--limit {
		background: transparent;
		border: 1px solid var(--os-color-limit-bg);
		border-left: 10px solid var(--os-color-limit-bg);
		box-shadow: inset 0px 0px 5px 0px var(--os-color-limit-bg);
		color: var(--os-color-bg);
	}
	&.os--weaknessTag {
		background: var(--os-color-limit-bg);
	}
	&.os--powerTag,
	&.os--themeTag,
	&.os--backpack {
		background: color-mix(in hsl, var(--os-color-accent-bg) 60%, transparent);
	}
}

:where(.os--kbd) {
	flex: none;
	padding: 0 4px;
	min-width: 24px;
	background: rgba(255, 255, 255, 0.25);
	border: 1px solid var(--color-border-light-2);
	border-radius: 5px;
	box-shadow: 1px 1px #444;
	text-align: center;
}

/* Custom Elements */

os-toggled-input {
	display: block;
	flex: 1;

	& [role="presentation"]:empty {
		min-width: 100px;
		min-height: 50px;
		background-color: rgb(0, 0, 0, 0.2);
	}
}

/* Custom App */

.os.os--new-tag {
	& .window-header {
		background: url(/ui/parchment.jpg) repeat;
		background-color: var(--os-color-accent-bg);
		background-blend-mode: color-burn;
		color: var(--os-color-lines);

		& h4 {
			display: inline;
		}
	}
}

.os--import-actor {
	width: -webkit-fill-available;
}

.os.os--confirm-delete {
	outline: 1px solid var(--os-color-lines);
	outline-offset: -10px;
	padding: 10px;
	border-radius: 0px;

	& .window-header {
		background: url("../assets/media/button-header.webp") no-repeat bottom / cover;
		color: var(--os-color-lines);
		flex: 0 0 32px;

		& h4 {
			display: inline;
			text-transform: uppercase;
			font-size: var(--font-size-12);
		}
	}

	& .window-content {
		padding: var(--os-space-3);

		& .dialog-buttons {
			margin-block-start: var(--os-space-2);
			display: flex;
			justify-content: space-between;
			gap: var(--os-space-2);
		}

		& button {
			background: var(--os-color-accent);
			color: var(--os-color-primary);
			border: 2px solid transparent;
			border-image: url(../assets/media/button-border.webp) 13 / 4;
			border-image-outset: 2px;
			text-transform: uppercase;

			&.yes {
				color: var(--os-color-accent);
				background-color: var(--os-color-accent-bg);
			}
		}
	}
}

/* Experimental Features */
@supports (field-sizing: content) {
	[data-size-input] {
		field-sizing: content;
		width: unset !important;
	}
}